INFORMACI√ìN DEL REPOSITORIO - PARCIAL 2 DISE√ëO DE SISTEMAS

Repositorio GitHub: https://github.com/boxlerr/Sistema-Excusas-Diseno-Sistemas
Integrantes: Juli√°n Boxler

ESTRUCTURA DEL REPOSITORIO:
- Rama main: C√≥digo estable y funcional
- Rama dev: Desarrollo activo
- Rama test: Pruebas y testing

MILESTONES CONFIGURADOS:
1. Dise√±o del sistema: Crear el modelo de clases, relaciones e interfaces respetando OOP y SOLID.
2. Implementaci√≥n de la cadena de encargados: Codificar la l√≥gica de manejo de excusas con la cadena de responsabilidad.
3. L√≥gica de emails y comunicaci√≥n: Implementar el env√≠o de emails seg√∫n el comportamiento de cada encargado.
4. Registro de prontuarios: Implementar el administrador de prontuarios y su uso por el CEO.
5. Tests del sistema: Agregar pruebas unitarias con JUnit 5 para cubrir comportamiento esperado.
6. Diagramas y documentaci√≥n: Crear y entregar los diagramas UML y justificaciones de patrones.
7. Exposici√≥n del sistema v√≠a API REST: Implementar una API RESTful con Spring Boot para permitir que se ingresen excusas desde el exterior.

LABELS CONFIGURADOS:
- bug: Para errores detectados en la l√≥gica del sistema
- feature: Para nuevas funcionalidades
- refactor: Para reestructurar el c√≥digo sin alterar el comportamiento
- oop: Cambios que responden a principios de programaci√≥n orientada a objetos
- solid: Aplicaci√≥n de principios SOLID
- chain-of-responsibility: Cambios relacionados con la cadena de encargados
- email: Funcionalidades asociadas al env√≠o de emails
- prontuario: Tareas vinculadas al registro o persistencia de prontuarios
- tests: Implementaci√≥n o mejora de pruebas unitarias
- api: Tareas vinculadas a la creaci√≥n o mejora de la API REST con Spring Boot
- controller: Tareas relacionadas con endpoints y controladores REST
- service: L√≥gica de negocio dentro de servicios de Spring
- documentation: Diagramas, README, explicaciones de patrones, API Docs
- uml: Cambios espec√≠ficos sobre diagramas de clases o casos de uso
- help wanted: Si necesitas asistencia externa en un issue
- enhancement: Mejoras en la calidad del sistema

COLABORADOR AGREGADO:
- @underabloodysky

TECNOLOG√çAS UTILIZADAS:
- Java 17
- Spring Boot 3.5.3
- Maven
- JUnit 5
- H2 Database
- Patrones de dise√±o: Chain of Responsibility, Strategy, Singleton, Observer, Template Method

ESTADO ACTUAL:
- ‚úÖ Sistema base implementado con patrones de dise√±o
- ‚úÖ Tests unitarios con JUnit 5
- ‚úÖ Configuraci√≥n Spring Boot lista
- ‚úÖ Base de datos H2 configurada
- üîÑ Preparado para implementaci√≥n de API REST 